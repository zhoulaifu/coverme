        -:    0:Source:foo.c
        -:    0:Graph:foo.gcno
        -:    0:Data:foo.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:
        -:    2:/* @(#)s_nextafter.c 1.3 95/01/18 */
        -:    3:/*
        -:    4: * ====================================================
        -:    5: * Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.
        -:    6: *
        -:    7: * Developed at SunSoft, a Sun Microsystems, Inc. business.
        -:    8: * Permission to use, copy, modify, and distribute this
        -:    9: * software is freely granted, provided that this notice 
        -:   10: * is preserved.
        -:   11: * ====================================================
        -:   12: */
        -:   13:
        -:   14:/* IEEE functions
        -:   15: *	nextafter(x,y)
        -:   16: *	return the next machine floating-point number of x in the
        -:   17: *	direction toward y.
        -:   18: *   Special cases:
        -:   19: */
        -:   20:
        -:   21:#include "fdlibm.h"
        -:   22:
        -:   23:#ifdef __STDC__
function foo_raw called 154842102 returned 100% blocks executed 62%
154842102:   24:	double foo_raw(double x, double y)
        -:   25:#else
        -:   26:	double foo_raw(x,y)
        -:   27:	double x,y;
        -:   28:#endif
        -:   29:{
        -:   30:	int	hx,hy,ix,iy;
        -:   31:	unsigned lx,ly;
        -:   32:
154842102:   33:	hx = __HI(x);		/* high word of x */
154842102:   34:	lx = __LO(x);		/* low  word of x */
154842102:   35:	hy = __HI(y);		/* high word of y */
154842102:   36:	ly = __LO(y);		/* low  word of y */
154842102:   37:	ix = hx&0x7fffffff;		/* |x| */
154842102:   38:	iy = hy&0x7fffffff;		/* |y| */
        -:   39:
154842102:   40:	if(((ix>=0x7ff00000)&&((ix-0x7ff00000)|lx)!=0) ||   /* x is nan */ 
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
branch  2 never executed
branch  3 never executed
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
    #####:   41:	   ((iy>=0x7ff00000)&&((iy-0x7ff00000)|ly)!=0))     /* y is nan */ 
branch  0 never executed
branch  1 never executed
    #####:   42:	   return x+y;				
154842102:   43:	if(x==y) return x;		/* x=y, return x */
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
154842102:   44:	if((ix|lx)==0) {			/* x == 0 */
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:   45:	    __HI(x) = hy&0x80000000;	/* return +-minsubnormal */
    #####:   46:	    __LO(x) = 1;
    #####:   47:	    y = x*x;
    #####:   48:	    if(y==x) return y; else return x;	/* raise underflow flag */
branch  0 never executed
branch  1 never executed
        -:   49:	} 
154842102:   50:	if(hx>=0) {				/* x > 0 */
branch  0 taken 50% (fallthrough)
branch  1 taken 50%
 77426058:   51:	    if(hx>hy||((hx==hy)&&(lx>ly))) {	/* x > y, x -= ulp */
branch  0 taken 25% (fallthrough)
branch  1 taken 75%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
branch  4 taken 50% (fallthrough)
branch  5 taken 50%
 58067606:   52:		if(lx==0) hx -= 1;
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
 58067606:   53:		lx -= 1;
        -:   54:	    } else {				/* x < y, x += ulp */
 19358452:   55:		lx += 1;
 19358452:   56:		if(lx==0) hx += 1;
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
        -:   57:	    }
        -:   58:	} else {				/* x < 0 */
 77416044:   59:	    if(hy>=0||hx>hy||((hx==hy)&&(lx>ly))){/* x < y, x -= ulp */
branch  0 taken 50% (fallthrough)
branch  1 taken 50%
branch  2 taken 50% (fallthrough)
branch  3 taken 50%
branch  4 taken 1% (fallthrough)
branch  5 taken 99%
branch  6 taken 62% (fallthrough)
branch  7 taken 38%
 58057486:   60:		if(lx==0) hx -= 1;
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
 58057486:   61:		lx -= 1;
        -:   62:	    } else {				/* x > y, x += ulp */
 19358558:   63:		lx += 1;
 19358558:   64:		if(lx==0) hx += 1;
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
        -:   65:	    }
        -:   66:	}
154842102:   67:	hy = hx&0x7ff00000;
154842102:   68:	if(hy>=0x7ff00000) return x+x;	/* overflow  */
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
154842102:   69:	if(hy<0x00100000) {		/* underflow */
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:   70:	    y = x*x;
    #####:   71:	    if(y!=x) {		/* raise underflow flag */
branch  0 never executed
branch  1 never executed
    #####:   72:		__HI(y) = hx; __LO(y) = lx;
    #####:   73:		return y;
        -:   74:	    }
        -:   75:	}
154842102:   76:	__HI(x) = hx; __LO(x) = lx;
154842102:   77:	return x;
        -:   78:}
