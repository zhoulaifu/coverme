        -:    0:Source:foo.c
        -:    0:Graph:foo.gcno
        -:    0:Data:foo.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:
        -:    2:/* @(#)e_cosh.c 1.3 95/01/18 */
        -:    3:/*
        -:    4: * ====================================================
        -:    5: * Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.
        -:    6: *
        -:    7: * Developed at SunSoft, a Sun Microsystems, Inc. business.
        -:    8: * Permission to use, copy, modify, and distribute this
        -:    9: * software is freely granted, provided that this notice 
        -:   10: * is preserved.
        -:   11: * ====================================================
        -:   12: */
        -:   13:
        -:   14:/* __ieee754_cosh(x)
        -:   15: * Method : 
        -:   16: * mathematically cosh(x) if defined to be (exp(x)+exp(-x))/2
        -:   17: *	1. Replace x by |x| (cosh(x) = cosh(-x)). 
        -:   18: *	2. 
        -:   19: *		                                        [ exp(x) - 1 ]^2 
        -:   20: *	    0        <= x <= ln2/2  :  cosh(x) := 1 + -------------------
        -:   21: *			       			           2*exp(x)
        -:   22: *
        -:   23: *		                                  exp(x) +  1/exp(x)
        -:   24: *	    ln2/2    <= x <= 22     :  cosh(x) := -------------------
        -:   25: *			       			          2
        -:   26: *	    22       <= x <= lnovft :  cosh(x) := exp(x)/2 
        -:   27: *	    lnovft   <= x <= ln2ovft:  cosh(x) := exp(x/2)/2 * exp(x/2)
        -:   28: *	    ln2ovft  <  x	    :  cosh(x) := huge*huge (overflow)
        -:   29: *
        -:   30: * Special cases:
        -:   31: *	cosh(x) is |x| if x is +INF, -INF, or NaN.
        -:   32: *	only cosh(0)=1 is exact for finite x.
        -:   33: */
        -:   34:
        -:   35:#include "fdlibm.h"
        -:   36:
        -:   37:#ifdef __STDC__
        -:   38:static const double one = 1.0, half=0.5, huge = 1.0e300;
        -:   39:#else
        -:   40:static double one = 1.0, half=0.5, huge = 1.0e300;
        -:   41:#endif
        -:   42:
        -:   43:#ifdef __STDC__
function foo_raw called 2708806 returned 100% blocks executed 42%
  2708806:   44:	double foo_raw(double x)
        -:   45:#else
        -:   46:	double foo_raw(x)
        -:   47:	double x;
        -:   48:#endif
        -:   49:{	
        -:   50:	double t,w;
        -:   51:	int ix;
        -:   52:	unsigned lx;
        -:   53:
        -:   54:    /* High word of |x|. */
  2708806:   55:	ix = __HI(x);
  2708806:   56:	ix &= 0x7fffffff;
        -:   57:
        -:   58:    /* x is INF or NaN */
  2708806:   59:	if(ix>=0x7ff00000) return x*x;	
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
        -:   60:
        -:   61:    /* |x| in [0,0.5*ln2], return 1+expm1(|x|)^2/(2*exp(|x|)) */
  2708806:   62:	if(ix<0x3fd62e43) {
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:   63:	    t = expm1(fabs(x));
    #####:   64:	    w = one+t;
    #####:   65:	    if (ix<0x3c800000) return w;	/* cosh(tiny) = 1 */
branch  0 never executed
branch  1 never executed
    #####:   66:	    return one+(t*t)/(w+w);
        -:   67:	}
        -:   68:
        -:   69:    /* |x| in [0.5*ln2,22], return (exp(|x|)+1/exp(|x|)/2; */
  2708806:   70:	if (ix < 0x40360000) {
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:   71:		t = __ieee754_exp(fabs(x));
call    0 never executed
    #####:   72:		return half*t+half/t;
        -:   73:	}
        -:   74:
        -:   75:    /* |x| in [22, log(maxdouble)] return half*exp(|x|) */
  2708806:   76:	if (ix < 0x40862E42)  return half*__ieee754_exp(fabs(x));
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:   77:
        -:   78:    /* |x| in [log(maxdouble), overflowthresold] */
  2708806:   79:	lx = *( (((*(unsigned*)&one)>>29)) + (unsigned*)&x);
  2708806:   80:	if (ix<0x408633CE || 
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
    #####:   81:	      (ix==0x408633ce)&&(lx<=(unsigned)0x8fb9f87d)) {
branch  0 never executed
branch  1 never executed
    #####:   82:	    w = __ieee754_exp(half*fabs(x));
call    0 never executed
    #####:   83:	    t = half*w;
    #####:   84:	    return t*w;
        -:   85:	}
        -:   86:
        -:   87:    /* |x| > overflowthresold, cosh(x) overflow */
  2708806:   88:	return huge*huge;
        -:   89:}
